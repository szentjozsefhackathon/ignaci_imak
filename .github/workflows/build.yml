name: Build & release app

on:
  workflow_dispatch: # Manual trigger only

jobs:
  build:
    name: Build & release app
    runs-on: macos-latest

    steps:
      - name: Check if branch is main
        if: github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/main'
        run: |
          echo "This workflow should not be triggered with workflow_dispatch on a branch other than main"
          exit 1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up java
        uses: actions/setup-java@v4
        with:
          distribution: oracle
          java-version: 17
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get
      - name: Run build_runner
        run: dart run build_runner build
      - name: Run dart_define
        run: dart run dart_define generate --force --FLAVOR=production
      - name: Run flutter_launcher_icons
        run: dart run flutter_launcher_icons

      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build App Bundle
        run: flutter build appbundle --dart-define-from-file=dart_define.json
      - name: Build IPA
        run: flutter build ipa --no-codesign --dart-define-from-file=dart_define.json
      - name: Build web app
        run: flutter build web --release --base-href="/flutter/" --dart-define-from-file=dart_define.json

      - name: Compress iOS output
        run: |
          cd build
          tar -czf ios_build.tar.gz ios
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Releases
          path: |
            build/app/outputs/bundle/release/app-release.aab
            build/ios_build.tar.gz

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV
      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Modify tag if exists
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/app-release.aab,build/ios_build.tar.gz"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Push web app image
        uses: docker/build-push-action@v5
        with:
          context: ./build/web
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/ignacio-flutter-web:latest
            ghcr.io/${{ github.repository_owner }}/ignacio-flutter-web:${{ github.sha }}
      - name: Verify web app image
        run: |
          echo "Docker image has been pushed to:"
          echo "ghcr.io/${{ github.repository_owner }}/ignacio-flutter-web:latest"
          echo "ghcr.io/${{ github.repository_owner }}/ignacio-flutter-web:${{ github.sha }}"
